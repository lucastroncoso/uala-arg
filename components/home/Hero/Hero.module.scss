@use "../../../styles/variables/variables" as *;
@use "../../../styles/mixins/respond-to" as *;
@use "../../../styles/types/types" as *;
@use "../../../styles/mixins/reset-styles" as *;

.hero {
  @include reset-styles;
  display: grid;
  overflow: hidden;
  position: relative;
  width: 100%;
  grid-template-rows: max-content 1fr;

  @include respond-to(minWidth768) {
    grid-template-rows: 1fr;
  }
}

.background {
  grid-area: 1/1;
  width: 100%;
  padding-top: 100%;
  height: 0;
  position: relative;
  overflow: hidden;
  margin-top: 50px;

  @include respond-to(minWidth768) {
    margin-top: 0;
    padding-top: 56.25%;
  }
}

.backgroundImage,
.popupNotification {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  min-width: 200%;
  height: 100%;
  object-fit: cover;
  transform: translateX(-27%);
  @include respond-to(minWidth768) {
    min-width: 170%;
    min-width: initial;
    transform: translateX(0);
  }
}

.svgBottom,
.video {
  position: absolute;
}

.video {
  position: absolute;
  top: 0;
  right: 0;
  width: auto;
  min-width: 170%;
  @include respond-to(minWidth768) {
    min-width: auto;
  }
}

.svgBottom {
  bottom: 0;
  width: 100%;
  left: 0;
  height: auto;

  svg {
    transform: translateX(0);
  }

  @include respond-to(minWidth768) {
    bottom: -100px;
    width: full;
    left: 50%;

    svg {
      transform: translateX(-50%);
    }
  }
}

.heroContent {
  grid-area: 2/1;
  width: 100%;
  margin-top: 0;
  background: $skyblue;
  padding-bottom: 72px;
  padding-left: 0;
  padding-right: 0;

  @include respond-to(minWidth768) {
    background: none;
    margin-top: 13.38vw;
    grid-area: 1/1;
    padding-bottom: 0;
  }

  @include respond-to(fullWidth) {
    max-width: 1440px;
  }

  .wordCycle {
    position: relative;

    & span {
      position: absolute;
      left: 10px;
      @include respond-to(minWidth768) {
        left: 13px;
      }
    }
  }
}

.title {
  font-size: 41px;
  font-weight: 700;
  width: 100%;
  @include respond-to(minWidth768) {
    font-size: 55px;
    font-weight: 700;
  }
}

.titleRight {
  font-size: 41px;
  width: 100%;
  @include respond-to(minWidth768) {
    font-size: 55px;
    font-weight: 700;
  }
  @include respond-to(fullWidth) {
    padding-left: 57%;
  }
}

p.paragraph {
  @include bigParagraph;
  margin-top: 30px;
  width: 90%;

  @include respond-to(minWidth768) {
    max-width: 428px;
  }
}

// .hero.regionAr {
//   .backgroundImage,
//   .popupNotification {
//     position: absolute;
//     top: 0;
//     left: 0;
//     width: 100%;
//     min-width: 180%;
//     height: 100%;

//     background-size: 120% ;
//     transform: translateX(-25%);
//     @include respond-to(minWidth768) {
//       min-width: initial;
//       transform: translateX(0);

//     }
//   }
// }
.hero.regionAr {
  .backgroundImage,
  .popupNotification {
    position: absolute;
    top: 0;
    left: 0;
    background-size: 140%;

    transform: translateX(-28%);
    @include respond-to(minWidth768) {
      min-width: initial;
      transform: translateX(0);
      background-size: 100%;
      width: 100%;
      height: 100%;
      
    }
  }
}

.backgroundCard {
  box-sizing: content-box;
  @include respond-to(minWidth768) {
    padding-left: 15px;
  }
  @include respond-to(preFullWidth) {
    width: 90%;
    height: 90%;
    padding-left: 220px;
    box-sizing: border-box; 
  }
  @include respond-to(fullWidth) {
    width: auto;
    height: auto;
    padding-top: 40px;
    padding-right: 220px;
  }
  @include respond-to(fullWidthMax) {
     width: auto;
    height: auto;
    padding-left: 320px;
    padding-top: 50px;
  }
}

.backgroundNotification {
  box-sizing: content-box;
  @include respond-to(minWidth768) {
    padding-left: 10px;
  }
  @include respond-to(minWidth768) {
    padding-left: 10px;
  }
  @include respond-to(fullWidth){
    width: auto;
    padding-top: 80px;
  }
  @include respond-to(fullWidthMax) {
    width: 93%;
    height: 93%;
    padding-left: 70px;
    padding-top: 20px;
  }
}
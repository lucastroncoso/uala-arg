@use "../../styles/variables/variables" as *;
@use "../../styles/mixins/underline-hover" as *;
@use "../../styles/types/types" as *;
@use "../../styles/mixins/respond-to" as *;
@use "../../styles/mixins/reset-styles" as *;
@use "../../styles/mixins/reset-button" as *;

@mixin bold-17 {
  font-size: 17px;
  font-weight: 600;
}

@mixin bold-20 {
  font-size: 20px;
  font-weight: 600;
}

.C01Navigation {
  @include reset-styles;
  @include bold-20;

  background-color: $white;
  display: flex;
  width: 100%;
  height: auto;
  max-height: 100vh;
  max-height: calc(var(--vh, 1vh) * 100);
  color: $gray-2;
  top: 0;
  position: fixed;
  z-index: 10;
  box-shadow: 0px 0px 15px rgba($blue, 0.25);
}

.blockWrapper {
  display: flex;
  flex-wrap: nowrap;
  flex-direction: column;
  width: 100%;

  @include respond-to(minWidth768) {
    flex-direction: row;
    align-items: center;
  }
}

.brandWrapper {
  position: relative;
  width: 100%;
  height: 65px;
  display: flex;
  flex-shrink: 0;
  justify-content: space-between;
  align-items: center;

  @include respond-to(minWidth768) {
    position: absolute;
    width: 90px;
    height: 55px;
    align-self: flex-start;
    padding-top: 5px;
  }
}

.logo {
  position: absolute;
  transition: $visibilityTransition;

  &.isHidden {
    @include makeInvisible;
  }

  &.isVisible {
    @include makeVisible;
  }
}

.logoText {
  width: 60px;
  height: 30px;

  @include respond-to(minWidth768) {
    width: 80px;
    height: 40px;
    top: 16px
  }
}

.logoWave {
  width: 50px;
  height: 28px;

  @include respond-to(minWidth768) {
    width: 58px;
    height: 33px;
    top: 12px;
    left: 50%;
    transform: translateX(-50%);
  }
}

.collapsibleWrapper {
  position: relative;
  display: block;
  align-items: center;
  flex-grow: 1;
  flex-wrap: wrap;
  margin-right: -20px;
  padding-right: 20px;
  height: 0;
  @include makeInvisible;
  overflow-y: auto;
  transition: opacity 0.75s, visibility 0.75s, height 0.75s;

  &.isOpen {
    background-attachment: fixed;
    height: 100vh;
    height: calc(var(--vh, 1vh) * 100);
    @include makeVisible;

    @include respond-to(minWidth768) {
      height: auto;
    }
  }

  @include respond-to(minWidth768) {
    overflow: hidden;
    display: flex;
    height: auto;
    padding: 26px 0;
    transition: padding 0.3s;
    margin: 0 0 0 160px;
    @include makeVisible;

    &.scrolledNav {
      padding: 16px 0;
    }
  }
}

.mobileMenuButton {
  @include reset-button;
  margin-left: auto;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-end;
  height: 40px;
  width: 40px;
  background: transparent;
  padding: 0;
  position: relative;
  font-weight: 400;
  color: $blue;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);

  &:focus {
    outline: none;
  }

  .buttonCopy {
    position: absolute;
    text-decoration: underline;
    font-size: 16px;
    line-height: 34px;
    top: 6px;
    transition: all 0.3s linear;
    opacity: 1;
    transform: translateX(0);
  }

  .crossIcon {
    position: absolute;
    font-family: ui-rounded, "Public Sans", sans-serif;
    font-size: 28px;
    top: 2px;
    transform: translateX(20px);
    opacity: 0;
    transition: all 0.3s linear;
  }

  &.isOpen {
    .buttonCopy {
      opacity: 0;
      transform: translateX(20px);
    }

    .crossIcon {
      opacity: 1;
      transform: translateX(-7px);
    }
  }

  @include respond-to(minWidth768) {
    display: none;
  }
}

.listWrapper {
  margin-top: 23px;
  display: flex;
  flex-direction: column;

  @include respond-to(minWidth768) {
    margin-top: 0;
    flex-direction: row;
    @include bold-17;
  }
}

.listItem {
  padding: 16px 0;

  @include respond-to(minWidth768) {
    padding: 0 17px;

    &:first-of-type {
      padding-left: 0;
    }
  }

  .itemButton {
    cursor: pointer;
    padding-bottom: 2px;
    transition: color 0.25s;
    @include underline-hover($gray-3);
    display: block;

    &.isActive {
      color: $gray-3;

      &::after {
        opacity: 1;
        transform: scaleX(1);
        transform-origin: 0% 50%;
      }
    }

    @include respond-to(minWidth768) {
      &:hover {
        color: $gray-3;
      }
    }

    .arrowIcon {
      position: absolute;
      right: 5px;
      top: 45%;
      width: 18px;
      height: 9px;
      transform: translateY(-45%);

      & svg {
        transition: transform 0.3s;
      }

      &.isOpen svg {
        transform: rotate(180deg);
      }
    }
  }
}

.languageSelector {
  padding-top: 40px;
  transition: $visibilityTransition;

  &.isHidden {
    @include makeInvisible;
  }

  @include respond-to(minWidth768) {
    padding: 0;
    margin-left: auto;
    @include bold-17;
  }

  span {
    transition: color 0.25s;
    text-transform: uppercase;
    padding: 0 5px;
    cursor: pointer;

    &:first-child {
      padding-left: 0;
    }

    &:last-child {
      border-left: solid 1px $gray-2;
      padding-right: 0;
    }

    &:hover {
      color: $gray-3;
    }
  }
}

.customClass.downloadButton {
  margin: 58px auto 25px;
  display: block;

  @include respond-to(minWidth768) {
    font-size: 15px;
    position: absolute;
    padding: 9px 37px;
    margin: 0;
    right: 0;
    top: 10px;
    @include makeInvisible;
    transition: $visibilityTransition;

    &.isVisible {
      @include makeVisible;
    }
  }
  @media (hover: hover) {
    &:hover {
      box-shadow: none;
    }
  }
}
